 ----
Building DbUnit
 ----
Felipe Leme
 ----
2006-12-23

Developer's Guide

  Here you find all information needed to contribute good code. These are
  naming conventions, heading comments, javadoc and unit tests.

Java file headers

  For new class files this header is recommended.

---
    /*
     *
     * The DbUnit Database Testing Framework
     * Copyright (C)2002-2008, DbUnit.org
     *
     * This library is free software; you can redistribute it and/or
     * modify it under the terms of the GNU Lesser General Public
     * License as published by the Free Software Foundation; either
     * version 2.1 of the License, or (at your option) any later version.
     *
     * This library is distributed in the hope that it will be useful,
     * but WITHOUT ANY WARRANTY; without even the implied warranty of
     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
     * Lesser General Public License for more details.
     *
     * You should have received a copy of the GNU Lesser General Public
     * License along with this library; if not, write to the Free Software
     * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
     *
     */
---

  For java class definitions this header is recommended.

---
    /**
     * @author <developer> (<sf-user-name> AT users.sourceforge.net)
     * @author Last changed by: $Author$
     * @version $Revision$ $Date$
     * @since <dbunit-version>
     */
---

  Here an example:

---
    /**
     * @author gommma (gommma AT users.sourceforge.net)
     * @author Last changed by: $Author$
     * @version $Revision$ $Date$
     * @since 2.4.0
     */
---

  Besides the standard javadoc tags it is desired to also add the dbunit
  version in which the method was introduced. This lets users and developers
  keep track of the changes that are made to the old/existing API.

---
    /**
     * @param myValue <some comment>
     * @since <dbunit-version>
     */
    public void assertSomething(String myValue) {
    ...
---


Running the DbUnit Test suite

* IDE setup (Intellij IDEA, Eclipse, etc...)

** dbunit.properties - Setup profiles without Maven - <A must when working within an IDE>.

  "dbunit.properties" is useful for environments which make it difficult if
  not impossible to use Maven's profiles.  For instance, the IDE IntelliJ IDEA
  which when calling JUnit tests, bypass Maven completely.  Since in this
  circumstance, Maven's profiles are not used, database configuration is not
  properly set and tests fail.

  <<<dbunit.properties>>> contains the missing properties which a profile
  would set.  It is an optional file and is not provided by DbUnit; one must
  create it under <<<src/test/resources>>>.

  Following is an example of the content of <<<dbunit.properties>>> that works
  for activating the profile <<<h2>>>:

---
    dbunit.profile=h2
    dbunit.profile.driverClass=org.h2.Driver
    dbunit.profile.url=jdbc:h2:target/h2/test
    dbunit.profile.schema=PUBLIC
    dbunit.profile.user=sa
    dbunit.profile.password=
    dbunit.profile.ddl=h2.sql
    dbunit.profile.unsupportedFeatures=BLOB,CLOB,SCROLLABLE_RESULTSET,INSERT_IDENTITY,TRUNCATE_TABLE,SDO_GEOMETRY,XML_TYPE
    dbunit.profile.multiLineSupport=true
---
